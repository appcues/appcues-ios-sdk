version: 2.1

# -------------------------
#       PARAMETERS
# -------------------------
parameters:
  deploy-beta:
    type: boolean
    default: false

# -------------------------
#          ORBS
# -------------------------
orbs:
  slack: circleci/slack@4.4.4

# -------------------------
#        EXECUTORS
# -------------------------
executors:
  xcode_13:
    macos:
      xcode: 13.0.0
    working_directory: /Users/distiller/project
    shell: /bin/bash --login -o pipefail
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1

# -------------------------
#        REFERENCES
# -------------------------
references:
  is_main: &is_main
    matches:
      pattern: '^main$'
      value: << pipeline.git.branch >>

# -------------------------
#          COMMANDS
# -------------------------
commands:
  install_with_cache:
    description: 'Checkout from git and install gem and mint dependencies'
    steps:
      - checkout
      - restore_cache:
          name: Restore gem cache
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install gem dependencies
          command: bundle check || bundle install --path vendor/bundle
      - save_cache:
          name: Save gem cache
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Install mint (Swift dependency manager)
          command: brew install mint
      - restore_cache:
          name: Restore swift build package cache
          key: 3-mint-{{ checksum "Mintfile" }}
      - run:
          name: Install swift build packages
          command: mint bootstrap
      - save_cache:
          name: Save swift build package cache
          key: 3-mint-{{ checksum "Mintfile" }}
          paths:
            - /usr/local/lib/mint

# -------------------------
#          JOBS
# -------------------------
jobs:
  validate_code:
    executor: xcode_13
    steps:
      - install_with_cache
      - run:
          name: Run fastlane tests
          command: bundle exec fastlane validate_code
      - store_artifacts:
          path: output
      - store_test_results:
          path: output/scan
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: team-mobile-bots

  deploy_example:
    executor: xcode_13
    steps:
      - install_with_cache
      - run:
          name: Run beta build
          command: bundle exec fastlane beta_example
      - slack/notify:
          event: fail
          template: basic_fail_1
          channel: team-mobile-bots
      - run:
          # some ideas from https://discuss.circleci.com/t/leveraging-circleci-api-to-include-build-logs-in-slack-notifications/39111
          name: Get changelog
          # 1) get the formatted changelong output; 2) find the lines that are actually the changelog; 3) format for JSON encoding; 4) remove the quotes that jq adds
          command: |
            APPCUES_SAMPLE_CHANGELOG=$(bundle exec fastlane run changelog_from_git_commits commits_count:5 pretty:"- [%as] %s" | grep "^-" -m 5 | jq -aRs . | sed -e 's/^"//' -e 's/"$//')
            echo $APPCUES_SAMPLE_CHANGELOG
            echo "export APPCUES_SAMPLE_CHANGELOG='${APPCUES_SAMPLE_CHANGELOG}'" >> $BASH_ENV
      - slack/notify:
          event: pass
          custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "ðŸš€ iOS Sample App Deployed to TestFlight ðŸ“²",
                    "emoji": true
                  }
                }
              ],
              "attachments": [
                {
                  "color": "#5C5CFF",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "plain_text",
                        "text": "$APPCUES_SAMPLE_CHANGELOG",
                        "emoji": true
                      }
                    },
                    {
                      "type": "actions",
                      "elements": [
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "View Job",
                            "emoji": true
                          },
                          "url": "$CIRCLE_BUILD_URL"
                        },
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "View in TestFlight",
                            "emoji": true
                          },
                          "url": "https://testflight.apple.com/v1/app/1590866976"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          channel: team-mobile-bots

# -------------------------
#        WORKFLOWS
# -------------------------
workflows:
  version: 2
  pr_validation:
    when:
      and:
        - not: *is_main
        - not: << pipeline.parameters.deploy-beta >>
    jobs:
      - validate_code:
          context:
            - Appcues

  build_and_deploy:
    when: << pipeline.parameters.deploy-beta >>
    jobs:
      - deploy_example:
          context:
            - Appcues

  main_verification:
    when:
      and:
        - *is_main
        - not: << pipeline.parameters.deploy-beta >>
    jobs:
      - validate_code:
          context:
            - Appcues
